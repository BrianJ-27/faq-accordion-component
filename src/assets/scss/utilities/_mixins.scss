// **************************************
// MIXINS
// **************************************

/*
Important reminders: 
1) using the "Null" keyword allows us to pass optional parameters to our mixins without bloating our code
2) using the "Null" keyword also means we don't have to worry about the order of our parameters. 
3) mixins work best 
*/

@use "./breakpoints" as *;

@mixin background-props(
  $bg-color,
  $imgPath1: null,
  $imgPath2: null,
  $bg-pos: null,
  $bg-size: null,
  $bg-repeat: null
) {
  background-color: $bg-color;
  background-image: url(#{$imgPath1});
  background-image: url(#{$imgPath2});
  background-position: $bg-pos;
  background-size: $bg-size;
  background-repeat: $bg-repeat;
}

// Make a circled element
@mixin roundy($dim: null, $border: null) {
  height: $dim;
  width: $dim;
  border: $border;
  border-radius: 50%;
}

// Text properties
@mixin text-prop($size, $l-height: null, $f-weight: null, $color: null) {
  font-size: $size;
  line-height: $l-height;
  font-weight: $f-weight;
  color: $color;
}

//Create a flex container
@mixin flex_me($dir: null, $wrap: null, $just: null, $vertAlign: null) {
  display: flex;
  flex-direction: $dir;
  align-items: $vertAlign;
  justify-content: $just;
}

// create simple grid container
@mixin grid_container(
  $grid-templ-col: null,
  $grid-temp-row: null,
  $grid-gap: null
) {
  display: grid;
  grid-template-columns: $grid-temp-col;
  grid-template-rows: $grid-temp-row;
  gap: $grid-gap;
}

// Media Query
@mixin mq($break) {
  $value: map-get($breakpoints, $break);
  $sm: map-get($breakpoints, "sm");

  @if $value < $sm {
    @media (max-width: $value) {
      @content;
    }
  } @else {
    @media (min-width: $value) {
      @content;
    }
  }
}
